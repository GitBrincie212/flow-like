---
interface Action {
    href: string;
    label: string;
}
interface Props {
    kicker?: string;
    title: string;
    subtitle?: string;
    primary: Action;
    secondary?: Action;
}
const { kicker, title, subtitle, primary, secondary } = Astro.props as Props;
---

<section
    id="cta"
    data-c1="hsl(35 96% 55% / .10)"
    data-c2="hsl(18 94% 52% / .10)"
    class="cta-section"
>
    <!-- background accents echoing website header -->
    <div aria-hidden="true" class="bg">
        <div class="bg-mask"><div class="bg-fills"></div></div>
    </div>

    <div class="container">
        <div class="card">
            {
                kicker && (
                    <div class="badge" role="note">
                        <span class="dot" aria-hidden="true" />
                        {kicker}
                    </div>
                )
            }

            <h2 class="title">{title}</h2>
            {subtitle && <p class="subtitle">{subtitle}</p>}

            <div class="actions">
                <a
                    class="btn primary"
                    href={primary.href}
                    aria-label={primary.label}
                >
                    <span class="btn__label">{primary.label}</span>
                    <svg
                        class="btn__icon"
                        width="16"
                        height="16"
                        viewBox="0 0 24 24"
                        aria-hidden="true"
                        ><path
                            fill="currentColor"
                            d="M14 3h7v7h-2V6.41l-9.3 9.3-1.4-1.41 9.3-9.3H14V3Z"
                        ></path></svg
                    >
                </a>
                {
                    secondary && (
                        <a
                            class="btn ghost"
                            href={secondary.href}
                            aria-label={secondary.label}
                        >
                            <span class="btn__label">{secondary.label}</span>
                        </a>
                    )
                }
            </div>
        </div>
    </div>
</section>

<style>
    :root {
        --flx-border: var(--sl-color-gray-5, rgba(255, 255, 255, 0.14));
        --flx-text: var(--sl-color-text, #e6e6e6);
    }

    .cta-section {
        position: relative;
        isolation: isolate;
        overflow: clip;
        margin: 4rem 0 2rem;
        padding: clamp(2rem, 6vw, 3.5rem) 1rem;
    }
    .container {
        margin: 0 auto;
        max-width: 1000px;
    }

    /* background accents */
    .bg {
        position: absolute;
        inset: 0;
        pointer-events: none;
        z-index: -1;
    }
    .bg-mask {
        position: absolute;
        inset: 0;
        -webkit-mask-image: radial-gradient(
            60% 60% at 50% 20%,
            black,
            transparent
        );
        mask-image: radial-gradient(60% 60% at 50% 20%, black, transparent);
    }
    .bg-fills {
        position: absolute;
        inset: 0;
        background: radial-gradient(
                520px 320px at 20% 0%,
                var(--c1, var(--flx-amber-flows) / 0.1),
                transparent
            ),
            radial-gradient(
                680px 420px at 80% 10%,
                var(--c2, var(--flx-orange-flows) / 0.1),
                transparent
            );
        filter: saturate(110%);
    }

    /* card with gradient ring & glass */
    .card {
        text-align: center;
        padding: clamp(1.6rem, 4vw, 2.4rem);
        border-radius: 18px;
        position: relative;
        overflow: hidden;
        background: color-mix(in oklab, var(--sl-color-bg) 10%, transparent);
        border: 1px solid
            color-mix(in oklab, var(--flx-border) 78%, transparent);
    }
    .card::before {
        content: "";
        position: absolute;
        inset: -1px;
        border-radius: 20px;
        padding: 1px;
        pointer-events: none;
        opacity: 0.38;
        transition: opacity 0.2s ease;
        background: linear-gradient(
            120deg,
            color-mix(in oklab, var(--flx-amber-flows) 40%, transparent),
            transparent 30%,
            color-mix(in oklab, var(--flx-orange-flows) 40%, transparent)
        );
        -webkit-mask:
            linear-gradient(#000 0 0) content-box,
            linear-gradient(#000 0 0);
        -webkit-mask-composite: xor;
        mask-composite: exclude;
    }
    .card:hover::before {
        opacity: 0.6;
    }

    /* heading */
    .badge {
        display: inline-flex;
        align-items: center;
        gap: 0.5rem;
        border: 1px solid
            color-mix(in oklab, var(--flx-border) 55%, transparent);
        background: color-mix(
            in oklab,
            var(--flx-amber-flows) 10%,
            transparent
        );
        color: color-mix(in oklab, var(--flx-amber-flows) 65%, var(--flx-text));
        padding: 0.42rem 0.8rem;
        border-radius: 999px;
        font-size: 0.82rem;
        font-weight: 600;
        backdrop-filter: blur(4px);
        margin-bottom: 0.75rem;
    }
    .dot {
        width: 0.5rem;
        height: 0.5rem;
        border-radius: 999px;
        background: color-mix(
            in oklab,
            var(--flx-amber-flows) 80%,
            var(--flx-orange-flows)
        );
        animation: pulse 1.8s infinite ease-in-out;
    }
    @keyframes pulse {
        0%,
        100% {
            transform: scale(0.9);
            opacity: 0.75;
        }
        50% {
            transform: scale(1);
            opacity: 1;
        }
    }

    .title {
        margin: 0.15rem 0;
        font-size: clamp(1.6rem, 3.2vw, 2.1rem);
        font-weight: 800;
        letter-spacing: -0.01em;
        background: linear-gradient(
            90deg,
            var(--sl-color-text),
            color-mix(
                in oklab,
                var(--flx-amber-flows) 65%,
                var(--sl-color-text)
            ),
            color-mix(
                in oklab,
                var(--flx-orange-flows) 65%,
                var(--sl-color-text)
            )
        );
        -webkit-background-clip: text;
        background-clip: text;
        color: transparent;
    }
    .subtitle {
        margin: 0.35rem auto 1rem;
        max-width: 60ch;
        color: color-mix(in oklab, var(--flx-text) 86%, transparent);
    }

    /* actions */
    .actions {
        display: flex;
        gap: 0.75rem;
        justify-content: center;
        flex-wrap: wrap;
        margin-top: 0.65rem;
    }
    .btn {
        --pad-x: 1rem;
        display: inline-flex;
        align-items: center;
        gap: 0.5rem;
        padding: 0.72rem var(--pad-x);
        border-radius: 0.85rem;
        border: 1px solid transparent;
        font-weight: 700;
        text-decoration: none;
        line-height: 1;
        transition:
            transform 0.16s ease,
            box-shadow 0.16s ease,
            border-color 0.16s ease,
            background 0.16s ease;
    }
    .btn__icon {
        flex: 0 0 auto;
    }
    .btn.primary {
        color: #fff;
        background: linear-gradient(
            100deg,
            color-mix(
                in oklab,
                var(--flx-amber-flows) 70%,
                var(--sl-color-accent, #ff5a3c)
            ),
            color-mix(
                in oklab,
                var(--flx-orange-flows) 70%,
                var(--sl-color-accent, #ff5a3c)
            )
        );
        box-shadow: 0 10px 28px rgba(0, 0, 0, 0.28);
    }
    .btn.primary:hover {
        transform: translateY(-1px);
        box-shadow: 0 12px 34px rgba(0, 0, 0, 0.32);
    }
    .btn.ghost {
        color: var(--sl-color-text);
        border-color: color-mix(in oklab, var(--flx-border) 65%, transparent);
        background: color-mix(in oklab, var(--sl-color-bg) 10%, transparent);
    }
    .btn.ghost:hover {
        border-color: color-mix(
            in oklab,
            var(--flx-border) 45%,
            var(--flx-orange-flows)
        );
        background: color-mix(in oklab, var(--sl-color-bg) 18%, transparent);
    }

    /* motion safety */
    @media (prefers-reduced-motion: reduce) {
        .card::before,
        .btn {
            transition: none;
        }
    }
</style>

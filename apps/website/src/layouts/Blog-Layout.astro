---
import "@tm9657/flow-like-ui/global.css";
import { BlogFooter } from "../components/blog-footer";
import { BlogHeader } from "../components/blog-header";
import type { CollectionEntry } from 'astro:content';
const { content, data } = Astro.props as { content: any, data: CollectionEntry<'blog'>['data'] };
const pub = data.date;
const upd = data.updated ?? data.date;

const site = Astro.site ?? import.meta.env.SITE ?? "https://flow-like.com";
const canonical = new URL(Astro.url.pathname, site).toString();

const title = data.title ?? "Flow-Like Blog";
const desc = data.description ?? "Enterprise-grade workflow automation built for scale.";
const cover = data.cover ?? "/og.webp";

function toIsoDate(d: string | Date | undefined): string | undefined {
  if (!d) return undefined;
  if (d instanceof Date) return d.toISOString();
  if (typeof d === "string") {
    // If itâ€™s exactly YYYY-MM-DD, pin to UTC midnight to avoid TZ shifts
    if (/^\d{4}-\d{2}-\d{2}$/.test(d)) return `${d}T00:00:00.000Z`;
    const parsed = new Date(d);
    return isNaN(parsed.getTime()) ? undefined : parsed.toISOString();
  }
  return undefined;
}

const pubISO = toIsoDate(data.date);
const updISO = toIsoDate(data.updated ?? data.date);
---

<!doctype html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="generator" content={Astro.generator} />

		<title>{title}</title>
		<meta name="description" content={desc} />
		<meta name="robots" content="index, follow" />
		<link rel="canonical" href={canonical} />

		<!-- Open Graph -->
		<meta property="og:type" content="article" />
		<meta property="og:site_name" content="Flow-Like" />
		<meta property="og:url" content={canonical} />
		<meta property="og:title" content={title} />
		<meta property="og:description" content={desc} />
		<meta property="og:image" content={cover} />
		<meta property="og:image:type" content="image/webp" />
		<meta property="og:image:width" content="1280" />
		<meta property="og:image:height" content="898" />
		<meta property="article:published_time" content={pubISO} />
		<meta property="article:modified_time" content={updISO} />

		<!-- Twitter -->
		<meta name="twitter:card" content="summary_large_image" />
		<meta name="twitter:site" content="@greatco_de" />
		<meta name="twitter:creator" content="@greatco_de" />
		<meta name="twitter:title" content={title} />
		<meta name="twitter:description" content={desc} />
		<meta name="twitter:image" content={cover} />

		{data.tags && <meta name="keywords" content={data.tags.join(", ")} />}
	</head>
	<body class="flex flex-col min-h-screen bg-background text-foreground bg-dot">
		<div class="pointer-events-none fixed inset-0 h-full w-full bg-white bg-[radial-gradient(#e5e7eb_1px,transparent_1px)] [background-size:16px_16px] -z-[100]"/>
		<BlogHeader/>
		<main class="flex flex-col flex-grow py-2 md:py-2 lg:py-6 xl:py-8 2xl:py-16 article prose">
			<slot />
		</main>
		<BlogFooter />
	</body>
</html>

<style>
	html,
	body {
		margin: 0;
		width: 100%;
		height: 100%;
	}
</style>


model LandingPage {
  id String @id

  title String
  description String
  image String
  link String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum SwimlaneType {
  PROJECT
  ARTICLE
  CHAT
  COURSE
  QUERY
}

enum SwimlaneSize {
  FULLSCREEN
  HALFSCREEN
  THIRDSCREEN
  THIRDSCREEN_MULTIROW
}

model Swimlane {
  id String @id

  title String?
  description String?

  type SwimlaneType
  size SwimlaneSize

  items SwimlaneItem[]

  // these are used to find items for the swimlane that are not fixed
  tags String[]
  index Int

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model SwimlaneItem {
  id String @id

  swimlane Swimlane @relation(fields: [swimlaneId], references: [id], onDelete: Cascade)
  swimlaneId String

  order Int

  // This could be a link to a different page / article / ... depending on the Type of Swimlane
  content Json?

  bit Bit? @relation(fields: [bitId], references: [id], onDelete: Cascade)
  bitId String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
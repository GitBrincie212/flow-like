//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.11

use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

#[derive(Debug, Clone, PartialEq, Eq, EnumIter, DeriveActiveEnum, Serialize, Deserialize)]
#[sea_orm(rs_type = "String", db_type = "Enum", enum_name = "BitType")]
pub enum BitType {
    #[sea_orm(string_value = "LLM")]
    Llm,
    #[sea_orm(string_value = "VLM")]
    Vlm,
    #[sea_orm(string_value = "EMBEDDING")]
    Embedding,
    #[sea_orm(string_value = "IMAGE_EMBEDDING")]
    ImageEmbedding,
    #[sea_orm(string_value = "FILE")]
    File,
    #[sea_orm(string_value = "MEDIA")]
    Media,
    #[sea_orm(string_value = "TEMPLATE")]
    Template,
    #[sea_orm(string_value = "TOKENIZER")]
    Tokenizer,
    #[sea_orm(string_value = "TOKENIZER_CONFIG")]
    TokenizerConfig,
    #[sea_orm(string_value = "SPECIAL_TOKENS_MAP")]
    SpecialTokensMap,
    #[sea_orm(string_value = "CONFIG")]
    Config,
    #[sea_orm(string_value = "PREPROCESSOR_CONFIG")]
    PreprocessorConfig,
    #[sea_orm(string_value = "PROJECTION")]
    Projection,
    #[sea_orm(string_value = "PROJECT")]
    Project,
    #[sea_orm(string_value = "BOARD")]
    Board,
    #[sea_orm(string_value = "OTHER")]
    Other,
    #[sea_orm(string_value = "OBJECT_DETECTION")]
    ObjectDetection,
    #[sea_orm(string_value = "COURSE")]
    Course,
}
#[derive(Debug, Clone, PartialEq, Eq, EnumIter, DeriveActiveEnum, Serialize, Deserialize)]
#[sea_orm(rs_type = "String", db_type = "Enum", enum_name = "CATEGORY")]
pub enum Category {
    #[sea_orm(string_value = "OTHER")]
    Other,
    #[sea_orm(string_value = "PRODUCTIVITY")]
    Productivity,
    #[sea_orm(string_value = "SOCIAL")]
    Social,
    #[sea_orm(string_value = "ENTERTAINMENT")]
    Entertainment,
    #[sea_orm(string_value = "EDUCATION")]
    Education,
    #[sea_orm(string_value = "HEALTH")]
    Health,
    #[sea_orm(string_value = "FINANCE")]
    Finance,
    #[sea_orm(string_value = "LIFESTYLE")]
    Lifestyle,
    #[sea_orm(string_value = "TRAVEL")]
    Travel,
    #[sea_orm(string_value = "NEWS")]
    News,
    #[sea_orm(string_value = "SPORTS")]
    Sports,
    #[sea_orm(string_value = "SHOPPING")]
    Shopping,
    #[sea_orm(string_value = "FOOD_AND_DRINK")]
    FoodAndDrink,
    #[sea_orm(string_value = "MUSIC")]
    Music,
    #[sea_orm(string_value = "PHOTOGRAPHY")]
    Photography,
    #[sea_orm(string_value = "UTILITIES")]
    Utilities,
    #[sea_orm(string_value = "WEATHER")]
    Weather,
    #[sea_orm(string_value = "GAMES")]
    Games,
    #[sea_orm(string_value = "BUSINESS")]
    Business,
    #[sea_orm(string_value = "COMMUNICATION")]
    Communication,
    #[sea_orm(string_value = "ANIME")]
    Anime,
}
#[derive(Debug, Clone, PartialEq, Eq, EnumIter, DeriveActiveEnum, Serialize, Deserialize)]
#[sea_orm(rs_type = "String", db_type = "Enum", enum_name = "ExecutionStatus")]
pub enum ExecutionStatus {
    #[sea_orm(string_value = "DEBUG")]
    Debug,
    #[sea_orm(string_value = "INFO")]
    Info,
    #[sea_orm(string_value = "WARN")]
    Warn,
    #[sea_orm(string_value = "ERROR")]
    Error,
    #[sea_orm(string_value = "FATAL")]
    Fatal,
}
#[derive(Debug, Clone, PartialEq, Eq, EnumIter, DeriveActiveEnum, Serialize, Deserialize)]
#[sea_orm(
    rs_type = "String",
    db_type = "Enum",
    enum_name = "PublicationRequestStatus"
)]
pub enum PublicationRequestStatus {
    #[sea_orm(string_value = "PENDING")]
    Pending,
    #[sea_orm(string_value = "ON_HOLD")]
    OnHold,
    #[sea_orm(string_value = "ACCEPTED")]
    Accepted,
    #[sea_orm(string_value = "REJECTED")]
    Rejected,
}
#[derive(Debug, Clone, PartialEq, Eq, EnumIter, DeriveActiveEnum, Serialize, Deserialize)]
#[sea_orm(rs_type = "String", db_type = "Enum", enum_name = "Status")]
pub enum Status {
    #[sea_orm(string_value = "ACTIVE")]
    Active,
    #[sea_orm(string_value = "INACTIVE")]
    Inactive,
    #[sea_orm(string_value = "ARCHIVED")]
    Archived,
}
#[derive(Debug, Clone, PartialEq, Eq, EnumIter, DeriveActiveEnum, Serialize, Deserialize)]
#[sea_orm(rs_type = "String", db_type = "Enum", enum_name = "SwimlaneSize")]
pub enum SwimlaneSize {
    #[sea_orm(string_value = "FULLSCREEN")]
    Fullscreen,
    #[sea_orm(string_value = "HALFSCREEN")]
    Halfscreen,
    #[sea_orm(string_value = "THIRDSCREEN")]
    Thirdscreen,
    #[sea_orm(string_value = "THIRDSCREEN_MULTIROW")]
    ThirdscreenMultirow,
}
#[derive(Debug, Clone, PartialEq, Eq, EnumIter, DeriveActiveEnum, Serialize, Deserialize)]
#[sea_orm(rs_type = "String", db_type = "Enum", enum_name = "SwimlaneType")]
pub enum SwimlaneType {
    #[sea_orm(string_value = "PROJECT")]
    Project,
    #[sea_orm(string_value = "ARTICLE")]
    Article,
    #[sea_orm(string_value = "CHAT")]
    Chat,
    #[sea_orm(string_value = "COURSE")]
    Course,
    #[sea_orm(string_value = "QUERY")]
    Query,
}
#[derive(Debug, Clone, PartialEq, Eq, EnumIter, DeriveActiveEnum, Serialize, Deserialize)]
#[sea_orm(rs_type = "String", db_type = "Enum", enum_name = "UserStatus")]
pub enum UserStatus {
    #[sea_orm(string_value = "ACTIVE")]
    Active,
    #[sea_orm(string_value = "INACTIVE")]
    Inactive,
    #[sea_orm(string_value = "BANNED")]
    Banned,
}
#[derive(Debug, Clone, PartialEq, Eq, EnumIter, DeriveActiveEnum, Serialize, Deserialize)]
#[sea_orm(rs_type = "String", db_type = "Enum", enum_name = "UserTier")]
pub enum UserTier {
    #[sea_orm(string_value = "FREE")]
    Free,
    #[sea_orm(string_value = "PREMIUM")]
    Premium,
    #[sea_orm(string_value = "PRO")]
    Pro,
    #[sea_orm(string_value = "ENTERPRISE")]
    Enterprise,
}
#[derive(Debug, Clone, PartialEq, Eq, EnumIter, DeriveActiveEnum, Serialize, Deserialize)]
#[sea_orm(rs_type = "String", db_type = "Enum", enum_name = "Visibility")]
pub enum Visibility {
    #[sea_orm(string_value = "PUBLIC")]
    Public,
    #[sea_orm(string_value = "PUBLIC_REQUEST_ACCESS")]
    PublicRequestAccess,
    #[sea_orm(string_value = "PRIVATE")]
    Private,
    #[sea_orm(string_value = "PROTOTYPE")]
    Prototype,
    #[sea_orm(string_value = "OFFLINE")]
    Offline,
}
